name: release-deb

on:
  push:
    tags:
    - '*'

jobs:
  release_build:
      runs-on: ubuntu-latest
      container:
        image: rostooling/setup-ros-docker:ubuntu-bionic-ros-melodic-ros-base-latest
        #options: -u root  # setup-node requires root access
      steps:
      - uses: actions/checkout@v2
        with:
          path: '.'
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install deps
        run: |
          ls
          rosdep update
          rosdep install --from-path . --ignore-src --rosdistro melodic -y
          sudo apt install -y python-bloom fakeroot dpkg-dev debhelper zip
      - name: Build package
        run: |
          ls
          bloom-release  --version
          bloom-generate rosdebian --os-name ubuntu --os-version bionic --ros-distro melodic
          fakeroot debian/rules binary
          mv ../ros-melodic-*.deb .
          zip bloom-release-deb.zip ros-melodic-*.deb
          ls
      - name: Upload deb
        uses: actions/upload-artifact@v2
        with:
          name: bloom-release-deb
          path: ros-melodic-*.deb
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_VERSION }}/assets
          asset_path: ./bloom-release-deb.zip
          asset_name: bloom-release-deb.zip
          asset_content_type: application/zip
